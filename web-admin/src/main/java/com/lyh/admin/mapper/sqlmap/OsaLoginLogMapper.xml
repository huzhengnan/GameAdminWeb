<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyh.admin.mapper.OsaLoginLogMapper">
  <resultMap id="BaseResultMap" type="com.lyh.admin.model.OsaLoginLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="world_id" jdbcType="VARCHAR" property="worldId" />
    <result column="user_ip" jdbcType="VARCHAR" property="userIp" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="addtime" jdbcType="VARCHAR" property="addtime" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, world_id, user_ip, login_time, open_id, level, role_name, addtime, app_id
  </sql>
  <select id="selectByExample" parameterType="com.lyh.admin.model.OsaLoginLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from osa_login_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from osa_login_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from osa_login_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lyh.admin.model.OsaLoginLogExample">
    delete from osa_login_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lyh.admin.model.OsaLoginLog">
    insert into osa_login_log (id, world_id, user_ip, 
      login_time, open_id, level, 
      role_name, addtime, app_id
      )
    values (#{id,jdbcType=BIGINT}, #{worldId,jdbcType=VARCHAR}, #{userIp,jdbcType=VARCHAR}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{openId,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{roleName,jdbcType=VARCHAR}, #{addtime,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lyh.admin.model.OsaLoginLog">
    insert into osa_login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="worldId != null">
        world_id,
      </if>
      <if test="userIp != null">
        user_ip,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="addtime != null">
        addtime,
      </if>
      <if test="appId != null">
        app_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="worldId != null">
        #{worldId,jdbcType=VARCHAR},
      </if>
      <if test="userIp != null">
        #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lyh.admin.model.OsaLoginLogExample" resultType="java.lang.Long">
    select count(*) from osa_login_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update osa_login_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.worldId != null">
        world_id = #{record.worldId,jdbcType=VARCHAR},
      </if>
      <if test="record.userIp != null">
        user_ip = #{record.userIp,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null">
        addtime = #{record.addtime,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update osa_login_log
    set id = #{record.id,jdbcType=BIGINT},
      world_id = #{record.worldId,jdbcType=VARCHAR},
      user_ip = #{record.userIp,jdbcType=VARCHAR},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      open_id = #{record.openId,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      addtime = #{record.addtime,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lyh.admin.model.OsaLoginLog">
    update osa_login_log
    <set>
      <if test="worldId != null">
        world_id = #{worldId,jdbcType=VARCHAR},
      </if>
      <if test="userIp != null">
        user_ip = #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        addtime = #{addtime,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lyh.admin.model.OsaLoginLog">
    update osa_login_log
    set world_id = #{worldId,jdbcType=VARCHAR},
      user_ip = #{userIp,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      open_id = #{openId,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      role_name = #{roleName,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>