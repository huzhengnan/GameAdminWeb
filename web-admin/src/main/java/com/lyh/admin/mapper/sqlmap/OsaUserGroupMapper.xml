<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyh.admin.mapper.OsaUserGroupMapper">
  <resultMap id="BaseResultMap" type="com.lyh.admin.model.OsaUserGroup">
    <id column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="owner_id" jdbcType="INTEGER" property="ownerId" />
    <result column="group_desc" jdbcType="VARCHAR" property="groupDesc" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lyh.admin.model.OsaUserGroup">
    <result column="group_role" jdbcType="LONGVARCHAR" property="groupRole" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    group_id, group_name, owner_id, group_desc
  </sql>
  <sql id="Blob_Column_List">
    group_role
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.lyh.admin.model.OsaUserGroupExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from osa_user_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.lyh.admin.model.OsaUserGroupExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from osa_user_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from osa_user_group
    where group_id = #{groupId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from osa_user_group
    where group_id = #{groupId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lyh.admin.model.OsaUserGroupExample">
    delete from osa_user_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lyh.admin.model.OsaUserGroup">
    insert into osa_user_group (group_id, group_name, owner_id, 
      group_desc, group_role)
    values (#{groupId,jdbcType=BIGINT}, #{groupName,jdbcType=VARCHAR}, #{ownerId,jdbcType=INTEGER}, 
      #{groupDesc,jdbcType=VARCHAR}, #{groupRole,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lyh.admin.model.OsaUserGroup">
    insert into osa_user_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        group_id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="groupDesc != null">
        group_desc,
      </if>
      <if test="groupRole != null">
        group_role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="groupDesc != null">
        #{groupDesc,jdbcType=VARCHAR},
      </if>
      <if test="groupRole != null">
        #{groupRole,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lyh.admin.model.OsaUserGroupExample" resultType="java.lang.Long">
    select count(*) from osa_user_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update osa_user_group
    <set>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=BIGINT},
      </if>
      <if test="record.groupName != null">
        group_name = #{record.groupName,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null">
        owner_id = #{record.ownerId,jdbcType=INTEGER},
      </if>
      <if test="record.groupDesc != null">
        group_desc = #{record.groupDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.groupRole != null">
        group_role = #{record.groupRole,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update osa_user_group
    set group_id = #{record.groupId,jdbcType=BIGINT},
      group_name = #{record.groupName,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=INTEGER},
      group_desc = #{record.groupDesc,jdbcType=VARCHAR},
      group_role = #{record.groupRole,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update osa_user_group
    set group_id = #{record.groupId,jdbcType=BIGINT},
      group_name = #{record.groupName,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=INTEGER},
      group_desc = #{record.groupDesc,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lyh.admin.model.OsaUserGroup">
    update osa_user_group
    <set>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="groupDesc != null">
        group_desc = #{groupDesc,jdbcType=VARCHAR},
      </if>
      <if test="groupRole != null">
        group_role = #{groupRole,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where group_id = #{groupId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lyh.admin.model.OsaUserGroup">
    update osa_user_group
    set group_name = #{groupName,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=INTEGER},
      group_desc = #{groupDesc,jdbcType=VARCHAR},
      group_role = #{groupRole,jdbcType=LONGVARCHAR}
    where group_id = #{groupId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lyh.admin.model.OsaUserGroup">
    update osa_user_group
    set group_name = #{groupName,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=INTEGER},
      group_desc = #{groupDesc,jdbcType=VARCHAR}
    where group_id = #{groupId,jdbcType=BIGINT}
  </update>
</mapper>